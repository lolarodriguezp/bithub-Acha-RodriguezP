<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="19.827" tests="6" errors="5" skipped="0" failures="1">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.3+7-Ubuntu-1ubuntu218.04.1"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/lolita/Escritorio/Facu/bd2/bithub/bithub-Acha-RodriguezP"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="AR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/lolita/Escritorio/Facu/bd2/bithub/bithub-Acha-RodriguezP"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="11.0.3+7-Ubuntu-1ubuntu218.04.1"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/opt/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.15.0-50-generic"/>
    <property name="user.home" value="/home/lolita"/>
    <property name="user.timezone" value="America/Argentina/Buenos_Aires"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="lolita"/>
    <property name="java.class.path" value="/opt/maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="11.0.3"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/opt/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2019-04-16"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testCreateReview" classname="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="0.152">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at ar.edu.unlp.info.bd2.services.BithubServiceTestCase.testCreateReview(BithubServiceTestCase.java:101)
</error>
    <system-out><![CDATA[Hibernate: 
    
    alter table Commit 
       drop 
       foreign key FK1yo3fl6me7ttfnbb2b6fuiro
Hibernate: 
    
    alter table Commit 
       drop 
       foreign key FKkakjjvq54uid1mbwxkpqgfo1h
Hibernate: 
    
    alter table File 
       drop 
       foreign key FK8u9esg9usqvo63rigfytki6xf
Hibernate: 
    
    alter table FileReview 
       drop 
       foreign key FKrg9sbt9lspdg20vaohwpn78ng
Hibernate: 
    
    alter table FileReview 
       drop 
       foreign key FKqljnajx6rrdr2n7fu5crnsqh0
Hibernate: 
    
    alter table Review 
       drop 
       foreign key FK4js7sgja4wydh6khfxkjthxxt
Hibernate: 
    
    alter table Review 
       drop 
       foreign key FK7rbnplhy7oaulxrkp8cqeablj
Hibernate: 
    
    drop table if exists Branch
Hibernate: 
    
    drop table if exists Commit
Hibernate: 
    
    drop table if exists File
Hibernate: 
    
    drop table if exists FileReview
Hibernate: 
    
    drop table if exists Review
Hibernate: 
    
    drop table if exists Tag
Hibernate: 
    
    drop table if exists User
Hibernate: 
    
    create table Branch (
       id bigint not null auto_increment,
        objectId tinyblob,
        name varchar(255),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table Commit (
       id bigint not null auto_increment,
        objectId tinyblob,
        description varchar(255),
        hash varchar(255),
        author_id bigint,
        branch_id bigint,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table File (
       id bigint not null auto_increment,
        objectId tinyblob,
        content varchar(255),
        filename varchar(255),
        file_id bigint,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table FileReview (
       id bigint not null auto_increment,
        objectId tinyblob,
        comment varchar(255),
        lineNumber integer,
        file_id bigint,
        review_id bigint,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table Review (
       id bigint not null auto_increment,
        objectId tinyblob,
        author_id bigint,
        branch_id bigint,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table Tag (
       id bigint not null auto_increment,
        objectId tinyblob,
        commitHash varchar(255),
        name varchar(255),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    create table User (
       id bigint not null auto_increment,
        objectId tinyblob,
        email varchar(255),
        name varchar(255),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    
    alter table Commit 
       add constraint FK1yo3fl6me7ttfnbb2b6fuiro 
       foreign key (author_id) 
       references User (id)
Hibernate: 
    
    alter table Commit 
       add constraint FKkakjjvq54uid1mbwxkpqgfo1h 
       foreign key (branch_id) 
       references Branch (id)
Hibernate: 
    
    alter table File 
       add constraint FK8u9esg9usqvo63rigfytki6xf 
       foreign key (file_id) 
       references Commit (id)
Hibernate: 
    
    alter table FileReview 
       add constraint FKrg9sbt9lspdg20vaohwpn78ng 
       foreign key (file_id) 
       references File (id)
Hibernate: 
    
    alter table FileReview 
       add constraint FKqljnajx6rrdr2n7fu5crnsqh0 
       foreign key (review_id) 
       references Review (id)
Hibernate: 
    
    alter table Review 
       add constraint FK4js7sgja4wydh6khfxkjthxxt 
       foreign key (author_id) 
       references User (id)
Hibernate: 
    
    alter table Review 
       add constraint FK7rbnplhy7oaulxrkp8cqeablj 
       foreign key (branch_id) 
       references Branch (id)
Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        File
        (objectId, content, filename) 
    values
        (?, ?, ?)
]]></system-out>
    <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Mon Jul 15 20:54:46 ART 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Mon Jul 15 20:54:46 ART 2019 WARN: Caught while disconnecting...

EXCEPTION STACK TRACE:



** BEGIN NESTED EXCEPTION ** 

javax.net.ssl.SSLException
MESSAGE: closing inbound before receiving peer's close_notify

STACKTRACE:

javax.net.ssl.SSLException: closing inbound before receiving peer's close_notify
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:133)
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:117)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:308)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:264)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:255)
	at java.base/sun.security.ssl.SSLSocketImpl.shutdownInput(SSLSocketImpl.java:645)
	at java.base/sun.security.ssl.SSLSocketImpl.shutdownInput(SSLSocketImpl.java:624)
	at com.mysql.jdbc.MysqlIO.quit(MysqlIO.java:2246)
	at com.mysql.jdbc.ConnectionImpl.realClose(ConnectionImpl.java:4236)
	at com.mysql.jdbc.ConnectionImpl.close(ConnectionImpl.java:1462)
	at org.apache.commons.dbcp.DelegatingConnection.close(DelegatingConnection.java:247)
	at org.apache.commons.dbcp.PoolableConnection.reallyClose(PoolableConnection.java:122)
	at org.apache.commons.dbcp.PoolableConnectionFactory.destroyObject(PoolableConnectionFactory.java:628)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1562)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:903)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:934)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1706)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:502)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:858)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:107)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:242)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:97)
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$null$2(ClassTestDescriptor.java:204)
	at org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.executeAndMaskThrowable(JupiterTestDescriptor.java:145)
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$invokeTestInstancePostProcessors$3(ClassTestDescriptor.java:204)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeTestInstancePostProcessors(ClassTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateAndPostProcessTestInstance(ClassTestDescriptor.java:189)
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$1(ClassTestDescriptor.java:181)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:80)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:60)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:132)
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)


** END NESTED EXCEPTION **


Mon Jul 15 20:54:46 ART 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
]]></system-err>
  </testcase>
  <testcase name="testCreateBranchAndCommit" classname="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="0.054">
    <failure message="expected: &lt;user@bithub.bd2.info.unlp.edu.ar&gt; but was: &lt;User&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <user@bithub.bd2.info.unlp.edu.ar> but was: <User>
	at ar.edu.unlp.info.bd2.services.BithubServiceTestCase.testCreateBranchAndCommit(BithubServiceTestCase.java:35)
]]></failure>
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testGetCommitsFromUser" classname="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="0.076">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at ar.edu.unlp.info.bd2.services.BithubServiceTestCase.testGetCommitsFromUser(BithubServiceTestCase.java:156)
</error>
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        File
        (objectId, content, filename) 
    values
        (?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testUsersThatCommitedInBranch" classname="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="0.077">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at ar.edu.unlp.info.bd2.services.BithubServiceTestCase.testUsersThatCommitedInBranch(BithubServiceTestCase.java:216)
</error>
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        File
        (objectId, content, filename) 
    values
        (?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testCreateTag" classname="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="0.077">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at ar.edu.unlp.info.bd2.services.BithubServiceTestCase.testCreateTag(BithubServiceTestCase.java:74)
</error>
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        File
        (objectId, content, filename) 
    values
        (?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testGetTotalNumberOfCommitsPerUser" classname="ar.edu.unlp.info.bd2.services.SpringDataBithubTestCase" time="0.075">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at ar.edu.unlp.info.bd2.services.BithubServiceTestCase.testGetTotalNumberOfCommitsPerUser(BithubServiceTestCase.java:189)
</error>
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        Branch
        (objectId, name) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        User
        (objectId, email, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        File
        (objectId, content, filename) 
    values
        (?, ?, ?)
]]></system-out>
  </testcase>
</testsuite>